from datetime import datetime
import json
from aiogram.types import Message

from loguru import logger


def save_user_data_to_json(user_id, data):
    """–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ json —Ñ–∞–π–ª"""
    file_path = f"{user_id}.json"
    with open(file_path, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)


async def handle_business_message(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ò –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –∏–ª–∏ –Ω–µ—Ç. –ï—Å–ª–∏ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è, —Ç–æ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é,
    –ï—Å–ª–∏ –≤—Ä–µ–º—è –Ω–µ —Ä–∞–±–æ—á–µ–µ, —Ç–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.
    """

    user_id = message.from_user.id
    user_bot = message.from_user.is_bot
    user_first_name = message.from_user.first_name
    user_last_name = message.from_user.last_name
    user_username = message.from_user.username
    user_language_code = message.from_user.language_code
    user_is_premium = message.from_user.is_premium
    user_added_to_attachment_menu = message.from_user.added_to_attachment_menu
    user_can_join_groups = message.from_user.can_join_groups
    user_can_read_all_group_messages = message.from_user.can_read_all_group_messages
    user_supports_inline_queries = message.from_user.supports_inline_queries
    user_can_connect_to_business = message.from_user.can_connect_to_business
    user_has_main_web_app = message.from_user.has_main_web_app

    logger.info(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_id}. Username {user_username}, –§–∞–º–∏–ª–∏—è: {user_last_name}, –ò–º—è: {user_first_name} –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.")

    user_data = {
        "user_id": user_id,
        "user_bot": user_bot,
        "user_first_name": user_first_name,
        "user_last_name": user_last_name,
        "user_username": user_username,
        "user_language_code": user_language_code,
        "user_is_premium": user_is_premium,
        "user_added_to_attachment_menu": user_added_to_attachment_menu,
        "user_can_join_groups": user_can_join_groups,
        "user_can_read_all_group_messages": user_can_read_all_group_messages,
        "user_supports_inline_queries": user_supports_inline_queries,
        "user_can_connect_to_business": user_can_connect_to_business,
        "user_has_main_web_app": user_has_main_web_app
    }

    save_user_data_to_json(user_id, user_data)

    logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_data} –∑–∞–ø–∏—Å–∞–Ω—ã –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")

    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Ä–∞–±–æ—á–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
    working_hours = {
        "start": {"hour": 9, "minute": 0},  # –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –≤ 09:00
        "end": {"hour": 18, "minute": 0},  # –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –≤ 18:00
    }

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    current_time = datetime.now()
    current_hour = current_time.hour
    current_minute = current_time.minute

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤–Ω—É—Ç—Ä–∏ —Ä–∞–±–æ—á–µ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    if (
            (
                    working_hours["start"]["hour"] <= current_hour < working_hours["end"]["hour"]
            ) or (
            current_hour == working_hours["start"]["hour"]
            and current_minute >= working_hours["start"]["minute"]
    ) or (
            current_hour == working_hours["end"]["hour"]
            and current_minute < working_hours["end"]["minute"]
    )
    ):
        await message.reply("–°–µ–π—á–∞—Å —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è.\n\n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. üïêüìã")
    else:
        await message.reply(
            "–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —è–≤–ª—è–µ—Ç—Å—è –Ω–µ—Ä–∞–±–æ—á–∏–º.\n\n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –ø–æ–∑–∂–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ! üïíüìÖ")
